def create_playfair_matrix(key):
    key = key.replace(" ", "").upper()
    key = key.replace("J", "I")
    alphabet = "ABCDEFGHIKLMNOPQRSTUVWXYZ"
    key_set = set()
    matrix = []
    
    for letter in key:
        if letter not in key_set:
            matrix.append(letter)
            key_set.add(letter)
    
    for letter in alphabet:
        if letter not in key_set:
            matrix.append(letter)
            key_set.add(letter)
    
    playfair_matrix = []
    for i in range(0, 25, 5):
        playfair_matrix.append(matrix[i:i+5])
    
    return playfair_matrix

def find_positions(matrix, char):
    for i in range(5):
        for j in range(5):
            if matrix[i][j] == char:
                return i, j

def playfair_encrypt(plain_text, matrix):
    plain_text = plain_text.replace(" ", "").upper()
    plain_text = plain_text.replace("J", "I")
    cipher_text = ""
    
    for i in range(0, len(plain_text), 2):
        if i + 1 < len(plain_text):
            char1 = plain_text[i]
            char2 = plain_text[i+1]
        else:
            char1 = plain_text[i]
            char2 = "X"
        
        row1, col1 = find_positions(matrix, char1)
        row2, col2 = find_positions(matrix, char2)
        
        if row1 == row2:
            cipher_text += matrix[row1][(col1 + 1) % 5]
            cipher_text += matrix[row2][(col2 + 1) % 5]
        elif col1 == col2:
            cipher_text += matrix[(row1 + 1) % 5][col1]
            cipher_text += matrix[(row2 + 1) % 5][col2]
        else:
            cipher_text += matrix[row1][col2]
            cipher_text += matrix[row2][col1]
    
    return cipher_text

key = "M FHI/J
